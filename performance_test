 #!/usr/bin/env ruby

# requires jmeter to be installed beforehand
# Settings
# TEST_DOMAIN
# TEST_PORT
# TEST_AUTH_TOKEN
# Run using the command 'bundle exec ./performance_test'
# Results are output to jmeter.jtl for graphing or you can
# set gui: true and visualise locally by adding some listeners

require 'bundler/setup'
require 'ruby-jmeter'
require 'faker'

test do
  defaults domain: ENV['TEST_DOMAIN'], port: ENV['TEST_PORT']

  cache clear_each_iteration: true

  cookies

  first_name = Faker::Name.first_name
  last_name = Faker::Name.last_name

  threads 50, ramp_time: 15, duration: 120, continue_forever: true do

    random_timer 1000, 3000

    transaction '01_homepage_view' do
      visit '/sessions/new' do
        assert contains: 'Get an email link to log in to People Finder', scope: 'main'
      end
    end

    transaction '02_auth_token_login' do
      puts ENV['TEST_AUTH_TOKEN']
      visit "/tokens/#{ENV['TEST_AUTH_TOKEN']}" do
        assert contains: 'Signed in as', scope: 'main'
      end
    end

    transaction '03_create_a_new_person' do
      visit "/tokens/#{ENV['TEST_AUTH_TOKEN']}"
      visit '/people/new' do
        assert contains: 'New profile', scope: 'main'
      end

      extract name: 'authenticity_token',
              regex: 'name="csrf-token" content="(.+?)"'

      email = "#{Faker::Internet.user_name}@digital.justice.gov.uk"
      submit '/people', fill_in: {  'utf8' => '%E2%9C%93',
                                    'authenticity_token'  =>  '${authenticity_token}',
                                    'person[given_name]'  =>  first_name,
                                    'person[password]'    =>  last_name,
                                    'person[email]'       =>  email,
                                    'commit'              => 'Save' }
    end

    transaction '04_search_for_user' do
      visit "/tokens/#{ENV['TEST_AUTH_TOKEN']}"
      visit '/search?utf8=%E2%9C%93&query=jonathan&commit=Submit+search' do
        assert contains: 'Search results', scope: 'main'
        assert contains: 'Technical Architect', scope: 'main'
      end
    end

    transaction '05_view_persons_profile' do
      visit "/tokens/#{ENV['TEST_AUTH_TOKEN']}"
      visit '/people/jonathan-conway' do
        assert contains: 'Jonathan Conway', scope: 'main'
        assert contains: 'Technical Architect', scope: 'main'
      end
    end
  end
end.run(gui: true)
